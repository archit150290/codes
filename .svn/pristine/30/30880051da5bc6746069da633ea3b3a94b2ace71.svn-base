/* 
 file which is included for both admin portal and client portal
 */
//document ready start
$(document).ready(function () {
     
});//document ready end

//==========function for bootbox.alert
function alertbootboxcb(msg, cb) {
    bootbox.alert({
        closeButton: false,
        "message": msg,
        "callback": function () {
            cb();
        }
    });
}
//==========function for bootbox.alert with call back function
function alertbootbox(msg) {
    bootbox.alert({
        closeButton: false,
        "message": msg,
        "className": "bootboxalertclass",
        "callback": function () {
            console.log("successfull");
        }
    });
    //=====added class to change cross button of bootbox
}
var timer = 0;
var delay = (function () {
    return function (callback, ms) {
        clearTimeout(timer);
        timer = setTimeout(callback, ms);
    };
})();

var btnObj = {
    'cancel': {
        label: 'No',
        className: 'btn-default '
    },
    'confirm': {
        label: 'Yes',
        className: 'btn-danger '
    }
};

//==============================addding option for create client and edit client
function add(category, scategory) {
    var value = jQuery("#UserOther" + category).val();
    console.log(value);
    if ($('select#User' + scategory + ' option[value="' + value + '"]').length == 1) {
        alertbootbox('This option already exists');
    } else {
        $('<option value="' + value + '">' + value + '</option>').insertBefore("select#User" + scategory + " option[value=other]");
        jQuery("#UserOther" + category).val("");
        jQuery("#other_User" + scategory).toggle();
        $('select#User' + scategory + ' option[value="' + value + '"]').prop('selected', true);
        $('select#User' + scategory + ' option[value="other"]').prop('selected', false);
        
    }
}

//=function used to trim and lowercase a string
function trimAndLowerCaseString(string) {
    var resultantstring = $.trim(string);
    resultantstring = resultantstring.toLowerCase();
    return resultantstring;
}

var dateparameters = {
    showOn: "button",
    buttonImage: siteurl + "img/calendar.gif",
    buttonImageOnly: true,
    changeMonth: true,
    changeYear: true,
    required: true,
    dpDate: true,
    maxDate: '0d',
    showAnim: "fadeIn",
    yearRange: "-100:+0",
    //dateFormat: 'yy-mm-dd'
    dateFormat: 'mm-dd-yy'
};

function isLoggedin(portal) {
    $.ajax({
                type: "POST",
                url: siteurl + 'ajax/isLoggedIn',
                dataType: 'json',
                success: function (response) {
                    if(response.success == false || response.portal != portal) {
//                         window.location.href = siteurl + response.portal + "/login";
                            alertbootbox("Your session has expired");
                            window.location.reload();
                    }
//                    window.location.href = siteurl + response.portal + "/login";
                },
                error: function (response) {
                }
     });
     
     setTimeout('isLoggedin("'+ portal + '")', 5000);
}

function timelyUpdate() {
    $.ajax({
                type: "POST",
                url: siteurl + 'cajax/timelyUpdate',
                dataType: 'json',
                success: function (response) {
                    if(response.status == true) {
                         var feedUpdates = response.data.feed_updates;
                         if(feedUpdates.live_updated_count > 0) {
                             $("#liveCount").html(feedUpdates.live_updated_count);
                             $("#liveCount").removeClass("hidden");
                             if($(".js_newLiveFeeds").length > 0) {
                                 $(".js_newLiveFeeds").parent().removeClass("hidden");
                             }
                         }
                         
                         if(feedUpdates.ndorsed_updated_count > 0) {
                             $("#ndorsedCount").html(feedUpdates.ndorsed_updated_count);
                             $("#ndorsedCount").removeClass("hidden");
                             if($(".js_newNdorsedFeeds").length > 0) {
                                 $(".js_newNdorsedFeeds").parent().removeClass("hidden");
                             }
                         }
                         
                         if(response.show_msg == true) {
                             alertbootboxcb(response.data.org_updates.msg, function(){
                                  //if current url is any endorse tab then refresh it
                                 var currentUrl = window.location.href;
                                 var  liveFeedUrl = siteurl + "endorse";
                                 var  liveFeedUrlIndex = siteurl + "endorse/index";
                                 var  ndorsedUrl = siteurl + "endorse/ndorsed";
                                 var  ndorserUrl = siteurl + "endorse/ndorse";
                                 var  statsUrl = siteurl + "endorse/stats";
                                 var inactiveOrgUrl = siteurl + "client/inactiveOrg";
                                 var orgStatus = response.data.org_updates.org_status;
                                 var userStatus = response.data.org_updates.user_status;

                                 if((currentUrl == liveFeedUrl || currentUrl == liveFeedUrlIndex || currentUrl == ndorsedUrl || currentUrl == ndorserUrl || currentUrl == statsUrl)
                                        && (orgStatus == 'inactive' || userStatus == 'inactive')
                                    ) {
                                     window.location.href = inactiveOrgUrl;
                                 }
                                 
                                 if(currentUrl == inactiveOrgUrl &&  orgStatus == 'active' && userStatus == 'active') {
                                     window.location.href = liveFeedUrl;
                                 }
                             });
                            
                         }
                    }
                },
                error: function (response) {
                }
     });
     
     setTimeout("timelyUpdate()", 10000);
}

function readURL(input,elementid) {
    //console.log(input);
    if (input.files && input.files[0]) {
        var reader = new FileReader();
        reader.onload = function (e) {
            console.log(e);
            $('#'+elementid).attr('src', e.target.result);
        }
        reader.readAsDataURL(input.files[0]);
    }
}
