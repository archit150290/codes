<?php
//the below code is used to register post type ebooks
define("EBOOKS_POST_TYPE", "ebooks");
define("EBOOKS_TAXONOMY", "ebooks-cat");

function custom_post_type_ebooks() {
    $labels = array(
        'name' => _x('E-Book', 'post type general name', 'your-plugin-textdomain'),
        'singular_name' => _x('E-Books', 'post type singular name', 'your-plugin-textdomain'),
        'menu_name' => _x('E-Books', 'admin menu', 'your-plugin-textdomain'),
        'name_admin_bar' => _x('E-Books', 'add new on admin bar', 'your-plugin-textdomain'),
        'add_new' => _x('Add New', 'ebooks', 'your-plugin-textdomain'),
        'add_new_item' => __('Add New Ebook', 'your-plugin-textdomain'),
        'new_item' => __('New Ebook', 'your-plugin-textdomain'),
        'edit_item' => __('Edit Ebook', 'your-plugin-textdomain'),
        'view_item' => __('View Ebook', 'your-plugin-textdomain'),
        'all_items' => __('All E-Books', 'your-plugin-textdomain'),
        'search_items' => __('Search Ebooks', 'your-plugin-textdomain'),
        'parent_item_colon' => __('Parent Ebooks:', 'your-plugin-textdomain'),
        'not_found' => __('No Ebooks found.', 'your-plugin-textdomain'),
        'not_found_in_trash' => __('No Ebooks found in Trash.', 'your-plugin-textdomain')
    );

    $args = array(
        'labels' => $labels,
        'public' => true,
        'publicly_queryable' => true,
        'show_ui' => true,
        'show_in_menu' => true,
        'rewrite' => array('slug' => EBOOKS_POST_TYPE, 'with_front' => false),
        'capability_type' => 'post',
        'has_archive' => true,
        'hierarchical' => false,
        'menu_position' => null,
        'supports' => array('title', 'editor', 'author', 'excerpt', 'thumbnail'),
            //'register_meta_box_cb' => 'add_ebooks_meta_boxes'
    );
    register_post_type(EBOOKS_POST_TYPE, $args);
}

add_action('init', 'custom_post_type_ebooks');


add_action('add_meta_boxes', 'add_ebooks_meta_boxes');

function add_ebooks_meta_boxes() {
    add_meta_box('ebooks_meta_box_id', 'Upload Ebooks Cover Picture', 'add_ebooks_metabox_cp', EBOOKS_POST_TYPE, 'normal', 'default');
    add_meta_box('ebooks_download_meta_box_id', 'Upload Ebook File', 'add_ebooks_metabox_files', EBOOKS_POST_TYPE, 'normal', 'default');
    add_meta_box('ebooks_meta_box_others_id', 'Table of Content', 'add_ebooks_metabox_others', EBOOKS_POST_TYPE, 'normal', 'default');
    add_meta_box('ebooks_featured_articles_metabox_id', __('Home Featured'), 'add_ebooks_home_featured_articles_meta_box', EBOOKS_POST_TYPE, 'normal', 'default');
}

function add_ebooks_metabox_cp($post) {

    wp_nonce_field(plugin_basename(__FILE__), 'wp_custom_attachment_nonce');

    $coverpicture = '<p class="description">';
    $coverpicture .= 'Upload your cover picture here.';
    $coverpicture .= '</p>';
    $coverpicture .= '<input type="file" id="meta_keyebook_image" name="meta_keyebook_image" value="" size="25" />';
    echo $coverpicture . "<br>";
    $coverimagesaved = get_post_meta($post->ID, 'meta_keyebook_image', true);
    if (!empty($coverimagesaved)) {
        ?>
        <img title="<?php echo basename($coverimagesaved['file']); ?>" src="<?php echo $coverimagesaved['url'] ?>" width="100px">

        <?php
    }
}

function add_ebooks_metabox_files($post) {
    wp_enqueue_script('media-upload');
    wp_enqueue_script('thickbox');
    wp_enqueue_script('my-upload');
    ?>

    <script type="text/javascript">
        jQuery(document).ready(function ($) {
            $('#upload_file_button').click(function () {
                document.getElementById('upload_file').value = 'upload_file_pdf';
                tb_show('', 'media-upload.php?type=file&amp;TB_iframe=true');
                return false;
            });
        });
    </script>

    <?php
    $savepdffile = get_post_meta($post->ID, 'meta_keyebook_file_pdf', true);
    $htmlpdf = '<p>';
    $htmlpdf .= 'Upload your PDF here. *Please Upload file less than 2MB';
    $htmlpdf .= '</p>';
    $htmlpdf .= '<input id="upload_file" type="hidden" size="36" name="upload_file" value="" />';
    $htmlpdf .= '<input id="upload_file_pdf" type="text" size="36" name="upload_file_pdf" value="" />';
    $htmlpdf .='<input type="button" id="upload_file_button" value="Upload PDF" />';
    echo $htmlpdf . "<br>";
    if (!empty($savepdffile)) {
        echo "<b>Already Uploaded File:- </b>" . basename($savepdffile);
    }
    ?>

    <script type="text/javascript">
        jQuery(document).ready(function ($) {
            $('#upload_file_epub_button').click(function () {
                document.getElementById('upload_file').value = 'upload_file_epub';
                tb_show('', 'media-upload.php?type=file&amp;TB_iframe=true');
                return false;
            });

        });
    </script>

    <?php
    $htmlepub = '<p>';
    $htmlepub .= 'Upload your EPUB here. *Please Upload file less than 2MB';
    $htmlepub .= '</p>';
    $htmlepub .='<input id="upload_file_epub" type="text" size="36" name="upload_file_epub" value="" />';
    $htmlepub .='<input type="button" id="upload_file_epub_button" value="Upload EPUB" />';
    echo $htmlepub . "<br>";
    $saveepubfile = get_post_meta($post->ID, 'meta_keyebook_file_epub', true);
    if (!empty($saveepubfile)) {
        echo "<b>Already Uploaded File:- </b>" . basename($saveepubfile);
    }
    ?>
    <script type="text/javascript">
        jQuery(document).ready(function ($) {
            $('#upload_file_mobi_button').click(function () {
                document.getElementById('upload_file').value = 'upload_file_mobi';
                tb_show('', 'media-upload.php?type=file&amp;TB_iframe=true');
                return false;
            });

            window.send_to_editor = function (html) {
                var upload_file = document.getElementById('upload_file').value;
                var txt = $(html).attr('href');
                $('#' + upload_file).val(txt);
                tb_remove();
            }

        });
    </script>
    <?php
    $htmlmobi = '<p>';
    $htmlmobi .= 'Upload your MOBI File here. *Please Upload file less than 2MB';
    $htmlmobi .= '</p>';
    $htmlmobi .='<input id="upload_file_mobi" type="text" size="36" name="upload_file_mobi" value="" />';
    $htmlmobi .='<input type="button" id="upload_file_mobi_button" value="Upload MOBI" />';
    echo $htmlmobi . "<br>";
    $savemobifile = get_post_meta($post->ID, 'meta_keyebook_file_mobi', true);
    if (!empty($savemobifile)) {
        echo "<b>Already Uploaded File:- </b>" . basename($savemobifile);
    }
    ?>
    <?php
}

function add_ebooks_metabox_others($post) {
    $ebooks_title = get_post_meta($post->ID, 'TOC_TITLE_EBOOKS_META_KEY', true);
    $toc_byline = get_post_meta($post->ID, 'TOC_BYLINE_EBOOKS_META_KEY', true);
    $toc_title = '<b>';
    $toc_title .= 'Title';
    $toc_title .= '</b><br>';
    $toc_title .='<input type="text" size="104" id="toc_title" name="toc_title" value="' . $ebooks_title . '">';
    echo $toc_title . "<br><br>";
    $toc = '<b>';
    $toc .= 'Byline';
    $toc .= '</b>';
    $toc .='<textarea name="toc_byline" style="width: 100%" rows="10">' . $toc_byline . '</textarea>';
    echo $toc . "<br><br>";
}

function add_ebooks_home_featured_articles_meta_box($post) {
    $home_featured = get_post_meta($post->ID, 'HOMEFEATURED_EBOOKS_META_KEY', true);
    ?>
    <label><input type="checkbox" value="1" name="home_featured_ebooks" id="home_featured_ebooks" <?php echo ($home_featured) ? "checked='checked'" : ''; ?> /> Set Home Featured</label>
        <?php
    }

    function save_custom_meta_data($post_id) {

        // Check if our nonce is set.

        if (!isset($_POST['wp_custom_attachment_nonce'])) {
            return $post_id;
        }
        /* --- security verification --- */
        if (!wp_verify_nonce($_POST['wp_custom_attachment_nonce'], plugin_basename(__FILE__))) {
            return $post_id;
        } // end if

        if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE) {
            return $post_id;
        } // end if

        if ('page' == $_POST['post_type']) {
            if (!current_user_can('edit_page', $post_id)) {
                return $post_id;
            } // end if
        } else {
            if (!current_user_can('edit_page', $post_id)) {
                return $post_id;
            } // end if
        } // end if
        /* - end security verification - */

        if (!empty($_FILES['meta_keyebook_image']['name'])) {

            $supported_types = array('image/jpeg', 'image/png', 'image/gif', 'image/jpg');

            // Get the file type of the upload
            $arr_file_type = wp_check_filetype(basename($_FILES['meta_keyebook_image']['name']));
            $uploaded_type = $arr_file_type['type'];


            // Check if the type is supported. If not, throw an error.
            if (in_array($uploaded_type, $supported_types)) {

                // Use the WordPress API to upload the file
                $upload = wp_upload_bits($_FILES['meta_keyebook_image']['name'], null, file_get_contents($_FILES['meta_keyebook_image']['tmp_name']));
                if (isset($upload['error']) && $upload['error'] != 0) {
                    wp_die('There was an error uploading your file. The error is: ' . $upload['error']);
                }

                update_post_meta($post_id, 'meta_keyebook_image', $upload);
                // end if/else
            } else {
                wp_die("The file type that you've uploaded is not a JPEG.");
            } // end if/else
        }

        if (!empty($_POST['upload_file_pdf'])) {
            if (isset($_POST['upload_file_pdf'])) {
                $upload_dir = wp_upload_dir();
                $upload_baseurl = $upload_dir['baseurl'];
                $background_file_url = $_POST['upload_file_pdf'];
                $file_array = explode($upload_baseurl, $background_file_url);
                $filepdf = substr($file_array[1], 1);
                update_post_meta($post_id, 'meta_keyebook_file_pdf', $filepdf);
            }
        }
        if (!empty($_POST['upload_file_epub'])) {
            if (isset($_POST['upload_file_epub'])) {
                $upload_dir = wp_upload_dir();
                $upload_baseurl = $upload_dir['baseurl'];
                $background_file_url = $_POST['upload_file_epub'];
                $file_array = explode($upload_baseurl, $background_file_url);
                $fileepub = substr($file_array[1], 1);
                update_post_meta($post_id, 'meta_keyebook_file_epub', $fileepub);
               }
        }
        if (!empty($_POST['upload_file_mobi'])) {
            if (isset($_POST['upload_file_mobi'])) {
                $upload_dir = wp_upload_dir();
                $upload_baseurl = $upload_dir['baseurl'];
                $background_file_url = $_POST['upload_file_mobi'];
                $file_array = explode($upload_baseurl, $background_file_url);
                $filemobi = substr($file_array[1], 1);
                update_post_meta($post_id, 'meta_keyebook_file_mobi', $filemobi);
            }
        }
//START OF UPDATING OR SAVING VALUES FOR OTHER META BOx
        $toc_title = sanitize_text_field($_POST['toc_title']);
        $toc_byline = sanitize_text_field($_POST['toc_title']);
        $homefeatured_ebooks = sanitize_text_field($_POST['home_featured_ebooks']);
        update_post_meta($post_id, TOC_TITLE_EBOOKS_META_KEY, $toc_title);
        update_post_meta($post_id, TOC_BYLINE_EBOOKS_META_KEY, $toc_byline);
        update_post_meta($post_id, HOMEFEATURED_EBOOKS_META_KEY, $homefeatured_ebooks);
    }

// end save_custom_meta_data
    add_action('save_post', 'save_custom_meta_data');

    function update_edit_form() {
        echo ' enctype="multipart/form-data"';
    }

// end update_edit_form
    add_action('post_edit_form_tag', 'update_edit_form');

//FUCNTION TO ALLOWED EPUB AND MOBI FILES TO BE UPLOADED.
    function addUploadMimes($mimes) {

        $mimes = array_merge($mimes, array(
            'epub' => 'application/octet-stream'
        ));
        return $mimes;
    }

    add_filter('upload_mimes', 'addUploadMimes');

    function addUploadMimesMobi($mimes) {

        $mimes = array_merge($mimes, array(
            'mobi' => 'application/octet-stream-mobi'
        ));
        return $mimes;
    }

    add_filter('upload_mimes', 'addUploadMimesMobi');
    ?>

